<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>Corrección de doble clic</value>
  </data>
  <data name="buttonEnabledCheckBox.Text" xml:space="preserve">
    <value>Correction activée</value>
  </data>
  <data name="delayLabel.Text" xml:space="preserve">
    <value>Vitesse minimale de double-clic [ms]</value>
  </data>
  <data name="descriptionTextBox.Text" xml:space="preserve">
    <value>Ajustez la vitesse de double-clic minimale de votre souris pour chaque bouton de la souris séparément.
Dans les journaux, vous voyez le temps écoulé entre les clics et tous les double-clics qui ont été ignorés.
Observez la durée de vos double-clics et comparez-la à celle des clics défectueux générés par votre souris.
Affinez la vitesse minimale pour inclure les clics défectueux tout en restant en dessous de votre vitesse normale.
Testez le comportement de votre souris avec les paramètres actuels avec le texte de test (clic simple, double-clic, sélection de texte).</value>
  </data>
  <data name="exitMenu.Text" xml:space="preserve">
    <value>Quitter l'application</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Journaux</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Corrigez les problèmes avec les souris défectueuses envoyant des double-clics accidentels.</value>
  </data>
  <data name="left.Text" xml:space="preserve">
    <value>Gauche</value>
  </data>
  <data name="middle.Text" xml:space="preserve">
    <value>Milieu</value>
  </data>
  <data name="mouseButtonComboBox.Items" xml:space="preserve">
    <value>Bouton gauche de la souris</value>
  </data>
  <data name="mouseButtonComboBox.Items1" xml:space="preserve">
    <value>Bouton droit de la souris</value>
  </data>
  <data name="mouseButtonComboBox.Items2" xml:space="preserve">
    <value>Bouton central de la souris</value>
  </data>
  <data name="mouseButtonComboBox.Items3" xml:space="preserve">
    <value>Bouton X1 de la souris</value>
  </data>
  <data name="mouseButtonComboBox.Items4" xml:space="preserve">
    <value>Bouton X2 de la souris</value>
  </data>
  <data name="notifyIcon.Text" xml:space="preserve">
    <value>Correction de double-clic</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
</value>
  </data>
  <data name="right.Text" xml:space="preserve">
    <value>Droite</value>
  </data>
  <data name="runAtStartupCheckBox.Text" xml:space="preserve">
    <value>Exécuter au démarrage de Windows</value>
  </data>
  <data name="saveButton.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="showUiMenu.Text" xml:space="preserve">
    <value>Afficher l'interface utilisateur</value>
  </data>
  <data name="x1.Text" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="x2.Text" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="useMinDelayCheckBox.Text" xml:space="preserve">
    <value>Autoriser les doubles clics avec une durée de 0 ms (à utiliser uniquement en cas de problèmes avec le pavé tactile ou l'écran tactile)</value>
  </data>
</root>