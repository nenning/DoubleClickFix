<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="delayLabel.Text" xml:space="preserve">
    <value>Velocidad mínima de doble clic [ms]</value>
  </data>
  <data name="delayLabel.ToolTip" xml:space="preserve">
    <value>Ajuste la velocidad mínima de doble clic para el botón del ratón seleccionado. Predeterminado: 50.</value>
  </data>
  <data name="delayTextBox.ToolTip" xml:space="preserve">
    <value>Se ignoran los dobles clics que están separados por menos del tiempo definido.</value>
  </data>
  <data name="saveButton.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="saveButton.ToolTip" xml:space="preserve">
    <value>Guardar configuración</value>
  </data>
  <data name="runAtStartupCheckBox.Text" xml:space="preserve">
    <value>Ejecutar al inicio de Windows</value>
  </data>
  <data name="runAtStartupCheckBox.ToolTip" xml:space="preserve">
    <value>Ejecutar siempre esta aplicación en segundo plano</value>
  </data>
  <data name="dragEndDelayLabel.Text" xml:space="preserve">
    <value>Retardo final [ms]</value>
  </data>
  <data name="dragEndDelayLabel.ToolTip" xml:space="preserve">
    <value>Tiempo mínimo que debe mantener el mouse quieto antes de soltar el botón para salir del estado de bloqueo de arrastre. Predeterminado: 150.</value>
  </data>
  <data name="dragStartDelayLabel.Text" xml:space="preserve">
    <value>Retardo de inicio [ms]</value>
  </data>
  <data name="dragStartDelayLabel.ToolTip" xml:space="preserve">
    <value>Tiempo mínimo que debe arrastrar antes de entrar en el estado de bloqueo de arrastre. Predeterminado: 1000.</value>
  </data>
  <data name="fixDraggingCheckBox.Text" xml:space="preserve">
    <value>Corregir problemas de arrastre</value>
  </data>
  <data name="fixDraggingCheckBox.ToolTip" xml:space="preserve">
    <value>Úselo solo si tiene problemas para arrastrar. Es posible que deba volver a hacer clic para salir del estado de bloqueo de arrastre</value>
  </data>
  <data name="useMinDelayCheckBox.Text" xml:space="preserve">
    <value>Permitir doble clic con una duración de 0 ms</value>
  </data>
  <data name="useMinDelayCheckBox.ToolTip" xml:space="preserve">
    <value>Úselo solo si el panel táctil o la pantalla táctil no funcionan correctamente</value>
  </data>
  <data name="buttonEnabledCheckBox.Text" xml:space="preserve">
    <value>Corrección habilitada</value>
  </data>
  <data name="mouseButtonComboBox.Items" xml:space="preserve">
    <value>Botón izquierdo del ratón</value>
  </data>
  <data name="mouseButtonComboBox.Items1" xml:space="preserve">
    <value>Botón derecho del ratón</value>
  </data>
  <data name="mouseButtonComboBox.Items2" xml:space="preserve">
    <value>Botón central del ratón</value>
  </data>
  <data name="mouseButtonComboBox.Items3" xml:space="preserve">
    <value>Botón X1 del ratón</value>
  </data>
  <data name="mouseButtonComboBox.Items4" xml:space="preserve">
    <value>Botón X2 del ratón</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Configuraciones</value>
  </data>
  <data name="x2.Text" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="x1.Text" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="middle.Text" xml:space="preserve">
    <value>Centro</value>
  </data>
  <data name="right.Text" xml:space="preserve">
    <value>Derecha</value>
  </data>
  <data name="left.Text" xml:space="preserve">
    <value>Izquierda</value>
  </data>
  <data name="showUiMenu.Text" xml:space="preserve">
    <value>Mostrar interfaz de usuario</value>
  </data>
  <data name="exitMenu.Text" xml:space="preserve">
    <value>Salir de la aplicación</value>
  </data>
  <data name="notifyIcon.Text" xml:space="preserve">
    <value>Corrección de doble clic</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Corrija problemas con ratones defectuosos que envían doble clics accidentales.</value>
  </data>
  <data name="descriptionTextBox.Text" xml:space="preserve">
    <value>En los registros, ves el tiempo transcurrido entre los clics y todos los dobles clics que fueron ignorados.
Observa cuánto tiempo duran tus dobles clics y compáralos con los defectuosos generados por tu ratón.
Ajusta la velocidad mínima para incluir los clics defectuosos mientras te mantienes por debajo de tu velocidad normal.
Prueba el comportamiento de tu ratón con la configuración actual con el texto de prueba (clic simple, doble clic, selección de texto).</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Registros</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Prueba</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Corrección de doble clic</value>
  </data>
</root>